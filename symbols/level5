// These partial variants assign ISO_Level5_Shift to various XKB keycodes
// so that the fifth shift level can be reached.

// The right Ctrl key (while pressed) chooses the fifth shift level.
partial modifier_keys
xkb_symbols "rctrl_switch" {
  key <RCTL> {
    type[Group1]="ONE_LEVEL",
    symbols[Group1] = [ ISO_Level5_Shift ]
    };
};

// The Less/Greater key (while pressed) chooses the fifth shift level.
partial modifier_keys
xkb_symbols "lsgt_switch" {
  key <LSGT> {
    type[Group1]="ONE_LEVEL",
    symbols[Group1] = [ ISO_Level3_Shift ],
    actions[Group1] = [ SetMods(modifiers=Mod3, clearLocks) ]
  };
};

// The right Alt key (while pressed) chooses the fifth shift level.
partial modifier_keys
xkb_symbols "ralt_switch" {
  key <RALT> {
    type[Group1]="ONE_LEVEL",
    symbols[Group1] = [ ISO_Level3_Shift ],
    actions[Group1] = [ SetMods(modifiers=Mod3, clearLocks) ]
  };
};

partial modifier_keys
xkb_symbols "lsgt_switch_lock" {
  key <LSGT> {
    type[Group1] = "ADNW_MOD4L",
    symbols[Group1] = [ ISO_Level3_Shift, ISO_Level3_Shift, ISO_Level3_Shift, ISO_Level3_Shift ],
    actions[Group1] = [ SetMods(modifiers=Mod3, clearLocks), LockMods(modifiers=Mod2), SetMods(modifiers=Mod3, clearLocks), LockMods(modifiers=Mod2) ]
  };
};

partial modifier_keys
xkb_symbols "lwin_switch_lock" {
  key <LWIN> {
    type[Group1] = "EIGHT_LEVEL",
    symbols[Group1] = [ ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift, Num_Lock, Num_Lock, Num_Lock, Num_Lock ]
  };
};

partial modifier_keys
xkb_symbols "ralt_switch_lock" {
  key <RALT> {
    type[Group1] = "ADNW_MOD4L",
    symbols[Group1] = [ ISO_Level3_Shift, ISO_Level3_Shift, ISO_Level3_Shift, ISO_Level3_Shift ],
    actions[Group1] = [ SetMods(modifiers=Mod3, clearLocks), LockMods(modifiers=Mod2), SetMods(modifiers=Mod3, clearLocks), LockMods(modifiers=Mod2) ]
  };
};

partial modifier_keys
xkb_symbols "rwin_switch_lock" {
  key <RWIN> {
    type[Group1] = "EIGHT_LEVEL",
    symbols[Group1] = [ ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift, Num_Lock, Num_Lock, Num_Lock, Num_Lock ]
  };
};

partial modifier_keys
xkb_symbols "lsgt_switch_lock_cancel" {
  key <LSGT> {
    type[Group1] = "ADNW_MOD4L",
    symbols[Group1] = [ ISO_Level3_Shift, ISO_Level3_Shift, ISO_Level3_Shift, ISO_Level3_Shift ],
    actions[Group1] = [ SetMods(modifiers=Mod3, clearLocks), LockMods(modifiers=Mod2), LockMods(modifiers=Mod2), LockMods(modifiers=Mod2) ]
  };
};

partial modifier_keys
xkb_symbols "lwin_switch_lock_cancel" {
  key <LWIN> {
    type[Group1] = "EIGHT_LEVEL_LEVEL_FIVE_LOCK",
    symbols[Group1] = [ ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift, Num_Lock, Num_Lock, Num_Lock, Num_Lock ]
  };
};

partial modifier_keys
xkb_symbols "ralt_switch_lock_cancel" {
  key <RALT> {
    type[Group1] = "ADNW_MOD4L",
    symbols[Group1] = [ ISO_Level3_Shift, ISO_Level3_Shift, ISO_Level3_Shift, ISO_Level3_Shift ],
    actions[Group1] = [ SetMods(modifiers=Mod3, clearLocks), LockMods(modifiers=Mod2), LockMods(modifiers=Mod2), LockMods(modifiers=Mod2) ]
  };
};

partial modifier_keys
xkb_symbols "rwin_switch_lock_cancel" {
  key <RWIN> {
    type[Group1] = "EIGHT_LEVEL_LEVEL_FIVE_LOCK",
    symbols[Group1] = [ ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift, ISO_Level5_Shift, Num_Lock, Num_Lock, Num_Lock, Num_Lock ]
  };
};
