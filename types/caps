// CapsLock uses internal capitalization rules,
// Shift "pauses" CapsLock.
partial xkb_types "internal" {
    type "ALPHABETIC" {
	modifiers = Shift+Lock;
	map[Shift] = Level2;
	preserve[Lock] = Lock;
	level_name[Level1] = "Base";
	level_name[Level2] = "Caps";
    };

    type "FOUR_LEVEL_ALPHABETIC" {
	modifiers = Shift+Lock+Mod5;
	map[None] = Level1;
	map[Shift] = Level2;
	preserve[Lock] = Lock;
	map[Mod5] = Level3;
	map[Shift+Mod5] = Level4;
	map[Lock+Mod5] =  Level3;
        map[Lock+Shift+Mod5] = Level3;
	preserve[Lock+Mod5] = Lock;
	level_name[Level1] = "Base";
	level_name[Level2] = "Shift";
	level_name[Level3] = "Alt Base";
	level_name[Level4] = "Shift Alt";
    };

    type "FOUR_LEVEL_SEMIALPHABETIC" {
	modifiers = Shift+Lock+Mod5;
	map[None] = Level1;
	map[Shift] = Level2;
	preserve[Lock] = Lock;
	map[Mod5] = Level3;
	map[Shift+Mod5] = Level4;
	map[Lock+Mod5] =  Level3;
        map[Lock+Shift+Mod5] = Level4;
	preserve[Lock+Mod5] = Lock;
	preserve[Lock+Shift+Mod5] = Lock;
	level_name[Level1] = "Base";
	level_name[Level2] = "Shift";
	level_name[Level3] = "Alt Base";
	level_name[Level4] = "Shift Alt";
    };
};

// CapsLock uses internal capitalization rules,
// Shift doesn't cancel CapsLock.
partial xkb_types "internal_nocancel" {
    type "ALPHABETIC" {
	modifiers = Shift;
	map[Shift] = Level2;
	level_name[Level1] = "Base";
	level_name[Level2] = "Caps";
    };

    type "FOUR_LEVEL_ALPHABETIC" {
	modifiers = Shift+Mod5;
	map[None] = Level1;
	map[Shift] = Level2;
	map[Mod5] = Level3;
	map[Shift+Mod5] = Level4;
	level_name[Level1] = "Base";
	level_name[Level2] = "Shift";
	level_name[Level3] = "Alt Base";
	level_name[Level4] = "Shift Alt";
    };

    type "FOUR_LEVEL_SEMIALPHABETIC" {
        // the same as FOUR_LEVEL_ALPHABETIC
	modifiers = Shift+Mod5;
	map[None] = Level1;
	map[Shift] = Level2;
	map[Mod5] = Level3;
	map[Shift+Mod5] = Level4;
	level_name[Level1] = "Base";
	level_name[Level2] = "Shift";
	level_name[Level3] = "Alt Base";
	level_name[Level4] = "Shift Alt";
    };
};

// CapsLock acts as Shift with locking,
// Shift "pauses" CapsLock.
partial xkb_types "shift" {
    type "ALPHABETIC" {
	modifiers = Shift+Lock;
	map[Shift] = Level2;
	map[Lock] = Level2;
	level_name[Level1] = "Base";
	level_name[Level2] = "Caps";
    };

    type "FOUR_LEVEL_ALPHABETIC" {
	modifiers = Shift+Lock+Mod5;
	map[None] = Level1;
	map[Shift] = Level2;
	map[Lock]  = Level2;
	map[Mod5] = Level3;
	map[Shift+Mod5] = Level4;
	map[Lock+Mod5] =  Level4;
	map[Shift+Lock+Mod5] =  Level3;
	level_name[Level1] = "Base";
	level_name[Level2] = "Shift";
	level_name[Level3] = "Alt Base";
	level_name[Level4] = "Shift Alt";
    };

    type "FOUR_LEVEL_SEMIALPHABETIC" {
	modifiers = Shift+Lock+Mod5;
	map[None] = Level1;
	map[Shift] = Level2;
	map[Lock]  = Level2;
	map[Mod5] = Level3;
	map[Shift+Mod5] = Level4;
	map[Lock+Mod5] =  Level3;
        map[Lock+Shift+Mod5] = Level4;
	preserve[Lock+Mod5] = Lock;
	preserve[Lock+Shift+Mod5] = Lock;
	level_name[Level1] = "Base";
	level_name[Level2] = "Shift";
	level_name[Level3] = "Alt Base";
	level_name[Level4] = "Shift Alt";
    };
};

// CapsLock acts as Shift with locking,
// Shift doesn't cancel CapsLock.
partial xkb_types "shift_nocancel" {
    type "ALPHABETIC" {
	modifiers = Shift+Lock;
	map[Shift] = Level2;
	map[Lock] = Level2;
	map[Shift+Lock] = Level2;
	level_name[Level1] = "Base";
	level_name[Level2] = "Caps";
    };

    type "FOUR_LEVEL_ALPHABETIC" {
	modifiers = Shift+Lock+Mod5;
	map[None] =  Level1;
	map[Shift] = Level2;
	map[Lock] =  Level2;
	map[Shift+Lock] = Level2;
	map[Mod5] = Level3;
	map[Shift+Mod5] = Level4;
	map[Lock+Mod5] =  Level4;
	map[Shift+Lock+Mod5] = Level4;
	level_name[Level1] = "Base";
	level_name[Level2] = "Shift";
	level_name[Level3] = "Alt Base";
	level_name[Level4] = "Shift Alt";
    };

    type "FOUR_LEVEL_SEMIALPHABETIC" {
	modifiers = Shift+Lock+Mod5;
	map[None] =  Level1;
	map[Shift] = Level2;
	map[Lock] =  Level2;
	map[Shift+Lock] = Level2;
	map[Mod5] = Level3;
	map[Shift+Mod5] = Level4;
	map[Lock+Mod5] =  Level3;
        map[Lock+Shift+Mod5] = Level4;
	preserve[Lock+Mod5] = Lock;
	preserve[Lock+Shift+Mod5] = Lock;
	level_name[Level1] = "Base";
	level_name[Level2] = "Shift";
	level_name[Level3] = "Alt Base";
	level_name[Level4] = "Shift Alt";
    };
};
