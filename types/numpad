partial default xkb_types "pc" {
    type "KEYPAD" {
	modifiers = Shift+Mod2;
	map[None] = Level1;
	map[Shift] = Level2;
	map[Mod2] = Level2;
	map[Shift+Mod2] = Level1;
	level_name[Level1] = "Base";
	level_name[Level2] = "Number";
    };
    include "extra(keypad)"
};

// On Mac keypads, level 1 and 2 are swapped.
partial xkb_types "mac" {
    type "KEYPAD" {
	modifiers = None;
	map[None] = Level2;
	level_name[Level2] = "Number";
    };
    include "extra(keypad)"
};

partial xkb_types "microsoft" {
    type "KEYPAD" {
        modifiers = Shift+Mod2;
        map[None] = Level1;
        preserve[Shift] = Shift;
        map[Mod2] = Level2;
        level_name[Level1] = "Base";
        level_name[Level2] = "Number";
    };
    include "extra(keypad)"
};

// Swiss-German style numeric keypad: Shift and NumLock operate as
// two independent modifiers; however, since we want shift state for
// the cursor keys, only three levels are used from the key mappings.
// Closest type is actually FOUR_LEVEL_X, but most numpad layouts use
// FOUR_LEVEL_MIXED_KEYPAD, so that's the one we are going to override.
partial xkb_types "shift3" {
    type "FOUR_LEVEL_MIXED_KEYPAD" {
        modifiers = Shift+Mod2+Control+Alt;

        // Mod2 Off => navigate using cursor keys
        map[None] = Level1;

        // Mod2 Off + Shift pressed => select using cursor keys
        preserve[Shift] = Shift;

        // Mod2 On => decimal digits
        map[Mod2] = Level2;

        // Mod2 On + Shift pressed => auxiliary symbols,
        // e.g. hexadecimal digits
        map[Shift+Mod2] = Level3;

        // Ctrl + Alt, regardless of Mod2 and Shift => command keys
        map[Control+Alt] = Level4;

        // reverse map from levels to modifiers
        level_name[Level1] = "Base";
        level_name[Level2] = "Mod2";
        level_name[Level3] = "Shift+NumLock";
        level_name[Level4] = "Ctrl+Alt";
    };
};
